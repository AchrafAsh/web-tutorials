{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notification","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","author","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","onChange","e","setState","target","value","onSubmit","preventDefault","signIn","authError","htmlFor","creds","credentials","signInWithEmailAndPassword","err","SignUp","username","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initialState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9186fed.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions'\n\nfunction SignedInLinks(props) {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).catch(err => { \n            dispatch({ type: 'LOGIN_ERROR', err })\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut()\n        .then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\n        })\n        .catch()\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((res) => {\n            return firestore.collection('users').doc(res.user.uid).set({\n                username: newUser.username,\n                initials: newUser.username[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function SignedOutLinks() {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Signup</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nfunction Navbar(props) {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\" >MarioPlan</Link>\n                { links }\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = state => {\n    console.log(state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\nimport moment from 'moment'\n\nexport default function Notification(props) {\n    const { notifications } = props\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(notification => {\n                            return (\n                                <li key={notification.id}>\n                                    <span className=\"pink-text\">{notification.user} </span>\n                                    <span>{notification.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(notification.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        }) }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport moment from 'moment'\n\nexport default function ProjectSummary({ project }) {\n    return (\n        <div className=\"card z-depth-0  project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.author}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nexport default function ProjectList({ projects }) {\n    return (\n        <div className=\"project-list section\">\n            { projects && projects.map(project => {\n                return (\n                    <Link to={`/project/${project.id}`} key={project.id}>\n                        <ProjectSummary project={project} />\n                    </Link>\n                )\n            }) }\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport Notification from './Notification';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n    render() {\n        const { projects, auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to=\"/signin\" />\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\"><Notification notifications={notifications}/></div>\n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([// Dashboard component sync to 'projects' collection\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] }, \n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n    ])\n)(Dashboard)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nfunction ProjectDetails(props) {\n    const { project, auth } = props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />\n    if (project) {\n        return (\n            <div>\n                <div className=\"container section project-details\">\n                    <div className=\"card z-depth-0\">\n                        <div className=\"card-content\">\n                            <span className=\"card-title\">{ project.title }</span>\n                            <p>{ project.content }</p>\n                        </div>\n                        <div className=\"card-action grey lighten-4 grey-text\">\n                            <div>Posted by { project.author }</div>\n                            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails)","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: '',\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n        \n    }\n\n    render() {\n        const { authError, auth } = this.props\n        if (auth.uid) return <Redirect to=\"/\" />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.onSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.onChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.onChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        signIn: creds => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        username: ''\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state)\n    }\n\n    render() {\n        const { auth, authError } = this.props\n        if (auth.uid) return <Redirect to=\"/\"/>\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.onSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"username\">Username</label>\n                        <input type=\"text\" id=\"username\" onChange={this.onChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.onChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.onChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{ authError }</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDistpatchToProps = dispatch => {\n    return {\n        signUp: newUser => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDistpatchToProps)(SignUp)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: '',\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state)\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { auth } = this.props\n        if (!auth.uid) return <Redirect to=\"/signin\" />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.onSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create new project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.onChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.onChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project, // spread properties title and content\n            author: profile.username,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROJECT', project: project });\n        }).catch(err => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n        })\n    }\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails'; \nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { signIn } from \"../actions/authActions\"\n\nconst initialState = {\n    authError: null\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('Login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success');\n            return state;\n        case 'SIGNUP_SUCCES':\n            console.log('signup success')\n            return {\n                ...state,\n                authError: null\n            };\n        case 'SIGNUP_ERROR':\n            console.log('sugnup error')\n            return {\n                ...state,\n                authError: action.err.message\n            };\n        default:\n            return state\n    }\n}\n\nexport default authReducer;","const initialState = {\n    projects: [\n        {id: 1, title: 'build kindleshare', content:'create pwa with react, redux, firebase...'},\n        {id: 2, title: 'build kindleshare', content:'create pwa with react, redux, firebase...'},\n        {id: 3, title: 'build kindleshare', content:'create pwa with react, redux, firebase...'}\n    ]\n}\n\nconst projectReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDsUK0z44TbbWwKvLuTzVjOHuRPfDtVyQk\",\n    authDomain: \"marioplan-e4d0b.firebaseapp.com\",\n    databaseURL: \"https://marioplan-e4d0b.firebaseio.com\",\n    projectId: \"marioplan-e4d0b\",\n    storageBucket: \"marioplan-e4d0b.appspot.com\",\n    messagingSenderId: \"903569205332\",\n    appId: \"1:903569205332:web:11e77ba6a64aa044c3a5c1\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore()\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\n// const store = createStore(rootReducer, applyMiddleware(thunk))\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById('root'));\n})\n\n\nserviceWorker.unregister();\n\n\n// if 'Object() is not a function' error pops in,\n// it's a package compatibility error.\n// npm i --save react-redux@5.1.1 react-redux-firebase@2.2.4"],"sourceRoot":""}